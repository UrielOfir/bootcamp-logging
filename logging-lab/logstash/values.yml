replicas: 1

logstashPipeline: 
 logstash.conf: |
  input {
  	beats {
  		port => 5044
  	}
  }
  filter {
    if [kubernetes][labels][app_kubernetes_io/name] == "guestbook" {
      grok {
        match => { "message" => "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}" }
        overwrite => [ "message" ]
      }
      date {
        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
      }
      geoip {
        source => "clientip"
      }
    }
  }
  output {
    if [kubernetes][labels][demo] == "guestbook-app" {
  	  elasticsearch {
  	  	hosts => "https://quickstart-es-http:9200"
        user => elastic
        password => sWi7q1O69CX93sAB087ysJk7
        index => "logstash-guestbook-%{+YYYY.MM.dd}"
        cacert => '/usr/share/logstash/ssl/ca.crt'
      }
  	}
    else {
      elasticsearch {
  	    hosts => "https://quickstart-es-http:9200"
        user => elastic
        password => sWi7q1O69CX93sAB087ysJk7
        index => "logstash-other-%{+YYYY.MM.dd}"
        cacert => '/usr/share/logstash/ssl/ca.crt'
      }
    }
  }

envFrom:
- secretRef:
    name: quickstart-es-elastic-user

secretMounts:
  - name: ca-certs
    path: /usr/share/logstash/ssl
    secretName: quickstart-es-http-certs-public

image: "docker.elastic.co/logstash/logstash"
imageTag: "7.14.0"

service: 
 annotations: {}
 type: ClusterIP
 ports:
   - name: beats
     port: 5044
     protocol: TCP
     targetPort: 5044

ingress:
  enabled: false